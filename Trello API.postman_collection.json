{
	"info": {
		"_postman_id": "d319686f-0327-4a31-b061-800b5230dbf8",
		"name": "Trello API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28394644"
	},
	"item": [
		{
			"name": "Create",
			"item": [
				{
					"name": "Create board",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// set boardName's value to \"testingBoard\"\r",
									"pm.environment.set(\"boardName\", \"testingBoard\")"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"// board id\r",
									"pm.environment.set(\"boardId\", jsonData.id);\r",
									"\r",
									"pm.test(\"Create board successfully (Status 200)\", () => {\r",
									"    pm.expect(pm.response.code).to.eql(200)\r",
									"});\r",
									"\r",
									"pm.test(\"Board name is correct\", () => {\r",
									"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"boardName\"))\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.trello.com/1/boards/?name={{boardName}}&key={{api_key}}&token={{token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"boards",
								""
							],
							"query": [
								{
									"key": "name",
									"value": "{{boardName}}"
								},
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json()\r",
									"pm.environment.set(\"listId\", jsonData.id);\r",
									"\r",
									"pm.test(\"Create list successfully (Status 200)\", () => {\r",
									"    pm.response.to.have.status(200)\r",
									"});\r",
									"\r",
									"pm.test(\"List name is correct\", () => {\r",
									"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"listName\"))\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// set listName's value to \"testingList\"\r",
									"pm.environment.set(\"listName\", \"testingList\")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://api.trello.com/1/boards/{{boardId}}/lists?name={{listName}}&key={{api_key}}&token={{token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"boards",
								"{{boardId}}",
								"lists"
							],
							"query": [
								{
									"key": "name",
									"value": "{{listName}}"
								},
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create card",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"// set card id\r",
									"pm.environment.set(\"cardId\", jsonData.id);\r",
									"\r",
									"pm.test(\"Create card successfully (Status 200)\", () => {\r",
									"    pm.response.to.have.status(200)\r",
									"});\r",
									"\r",
									"pm.test(\"Card name is correct\", () => {\r",
									"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"cardName\"))\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// set cardName's value to \"testingCard\"\r",
									"pm.environment.set(\"cardName\", \"testingCard\")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://api.trello.com/1/cards?idList={{listId}}&key={{api_key}}&token={{token}}&name={{cardName}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"cards"
							],
							"query": [
								{
									"key": "idList",
									"value": "{{listId}}"
								},
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								},
								{
									"key": "name",
									"value": "{{cardName}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create checklist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"// set checklist id\r",
									"pm.environment.set(\"checklistId\", jsonData.id);\r",
									"\r",
									"pm.test(\"Create checklist successfully (Status 200)\", () => {\r",
									"    pm.response.to.have.status(200)\r",
									"});\r",
									"\r",
									"pm.test(\"Checklist name is correct\", () => {\r",
									"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"checklistName\"))\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// set checklistName's value to \"testingChecklist\"\r",
									"pm.environment.set(\"checklistName\", \"testingChecklist\")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://api.trello.com/1/checklists?idCard={{cardId}}&key={{api_key}}&token={{token}}&name={{checklistName}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"checklists"
							],
							"query": [
								{
									"key": "idCard",
									"value": "{{cardId}}"
								},
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								},
								{
									"key": "name",
									"value": "{{checklistName}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create checkitem",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json()\r",
									"\r",
									"// set checkitem id\r",
									"pm.environment.set(\"checkitemId\", jsonData.id)\r",
									"\r",
									"pm.test(\"Create checkitem successfully (Status 200)\", () => {\r",
									"    pm.response.to.have.status(200)\r",
									"});\r",
									"\r",
									"pm.test(\"Checkitem name is correct\", () => {\r",
									"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"checkitemName\"))\r",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// set checkitemName's value to \"testingCheckitem\"\"\r",
									"pm.environment.set(\"checkitemName\", \"testingCheckitem\")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://api.trello.com/1/checklists/{{checklistId}}/checkItems?name={{checkitemName}}&key={{api_key}}&token={{token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"checklists",
								"{{checklistId}}",
								"checkItems"
							],
							"query": [
								{
									"key": "name",
									"value": "{{checkitemName}}"
								},
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Read",
			"item": [
				{
					"name": "Get a board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get a board successfully\", () => {\r",
									"    pm.response.to.have.status(200)\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.trello.com/1/boards/{{boardId}}?key={{api_key}}&token={{token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"boards",
								"{{boardId}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get a list successfully\", () => {\r",
									"    pm.response.to.have.status(200)\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.trello.com/1/lists/{{listId}}?key={{api_key}}&token={{token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"lists",
								"{{listId}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a card",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get a card successfully\", () => {\r",
									"    pm.response.to.have.status(200)\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.trello.com/1/cards/{{cardId}}?key={{api_key}}&token={{token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"cards",
								"{{cardId}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a checklist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get a checklist successfully\", () => {\r",
									"    pm.response.to.have.status(200)\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.trello.com/1/checklists/{{checklistId}}?key={{api_key}}&token={{token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"checklists",
								"{{checklistId}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a checkitem",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get a checkitem successfully\", () => {\r",
									"    pm.response.to.have.status(200)\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.trello.com/1/checklists/{{checklistId}}/checkItems/{{checkitemId}}?key={{api_key}}&token={{token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"checklists",
								"{{checklistId}}",
								"checkItems",
								"{{checkitemId}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Update",
			"item": [
				{
					"name": "Update board",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// set boardName's value to \"updatedTestingBoard\"\r",
									"pm.environment.set(\"newBoardName\", \"updatedTestingBoard\");\r",
									"pm.environment.set(\"boardDescription\", \"This is a board description\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Update board successfully\", () => {\r",
									"    pm.response.to.have.status(200)\r",
									"});\r",
									"\r",
									"pm.test(\"Board name changed correctly\", () => {\r",
									"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"newBoardName\"))\r",
									"});\r",
									"\r",
									"pm.test(\"Board description has been added\", () => {\r",
									"    pm.expect(jsonData.desc).to.exist\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "https://api.trello.com/1/boards/{{boardId}}?key={{api_key}}&token={{token}}&name={{newBoardName}}&desc={{boardDescription}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"boards",
								"{{boardId}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								},
								{
									"key": "name",
									"value": "{{newBoardName}}"
								},
								{
									"key": "desc",
									"value": "{{boardDescription}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update list",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// set listName's value to \"updatedListName\"\r",
									"pm.environment.set(\"newListName\", \"updatedListName\");\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Update list successfully\", () => {\r",
									"    pm.response.to.have.status(200)\r",
									"});\r",
									"\r",
									"pm.test(\"List name changed correctly\", () => {\r",
									"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"newListName\"))\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "https://api.trello.com/1/lists/{{listId}}?key={{api_key}}&token={{token}}&name={{newListName}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"lists",
								"{{listId}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								},
								{
									"key": "name",
									"value": "{{newListName}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update card",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"newCardName\", \"updatedCardName\");\r",
									"\r",
									"pm.environment.set(\"cardDescription\", \"This is a card description\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Update card successfully\", () => {\r",
									"    pm.response.to.have.status(200)\r",
									"});\r",
									"\r",
									"pm.test(\"Card description has been added successfully\", () => {\r",
									"    pm.expect(jsonData.desc).to.exist\r",
									"});\r",
									"\r",
									"pm.test(\"Changed card name is correct\", () => {\r",
									"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"newCardName\"))\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "https://api.trello.com/1/cards/{{cardId}}?key={{api_key}}&token={{token}}&desc={{cardDescription}}&name={{newCardName}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"cards",
								"{{cardId}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								},
								{
									"key": "desc",
									"value": "{{cardDescription}}"
								},
								{
									"key": "name",
									"value": "{{newCardName}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update checklist",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"newChecklistName\", \"updatedChecklistName\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Update checklist successfully\", () => {\r",
									"    pm.response.to.have.status(200)\r",
									"});\r",
									"\r",
									"pm.test(\"Changed checklist name is correct\", () => {\r",
									"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"newChecklistName\"))\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "https://api.trello.com/1/checklists/{{checklistId}}?key={{api_key}}&token={{token}}&name={{newChecklistName}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"checklists",
								"{{checklistId}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								},
								{
									"key": "name",
									"value": "{{newChecklistName}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Delete / Archive",
			"item": [
				{
					"name": "Del checkitem",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Delete checkitem from checklist successfully\", () => {\r",
									"    pm.response.to.have.status(200)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.trello.com/1/checklists/{{checklistId}}/checkItems/{{checkitemId}}?key={{api_key}}&token={{token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"checklists",
								"{{checklistId}}",
								"checkItems",
								"{{checkitemId}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Del checklist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Delete checklist successfully\", () => {\r",
									"    pm.response.to.have.status(200)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.trello.com/1/checklists/{{checklistId}}?key={{api_key}}&token={{token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"checklists",
								"{{checklistId}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Del card",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Delete card successfully\", () => {\r",
									"    pm.response.to.have.status(200)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.trello.com/1/cards/{{cardId}}?key={{api_key}}&token={{token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"cards",
								"{{cardId}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Archive list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Archive list successfully\", () => {\r",
									"    pm.response.to.have.status(200)\r",
									"} );"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "https://api.trello.com/1/lists/{{listId}}/closed?key={{api_key}}&token={{token}}&value=true",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"lists",
								"{{listId}}",
								"closed"
							],
							"query": [
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								},
								{
									"key": "value",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Del board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Delete board successfully (Status 200)\", () => {\r",
									"    pm.expect(pm.response.code).to.eql(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.trello.com/1/boards/{{boardId}}?key={{api_key}}&token={{token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"boards",
								"{{boardId}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Response time is less than 3 seconds\", function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(3000);",
					"});"
				]
			}
		}
	]
}